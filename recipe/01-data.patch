diff --git a/torchmdnet/data.py b/torchmdnet/data.py
index 1adc42d..c2030aa 100644
--- a/torchmdnet/data.py
+++ b/torchmdnet/data.py
@@ -42,6 +42,24 @@ class FloatCastDatasetWrapper(Dataset):
         return getattr(self.dataset, name)
 
 
+def adapt_floats_for_dtype(dataset, dtype=torch.float64):
+    """
+    Modifies the `get` method of the given dataset to cast all floating point
+    tensors to the specified dtype.
+    """
+    # Store the original get method
+    original_get = dataset.get
+    # Define a new get method that wraps the original one
+    def get_with_cast(idx):
+        data = original_get(idx)
+        for key, value in data:
+            if torch.is_tensor(value) and torch.is_floating_point(value):
+                setattr(data, key, value.to(dtype))
+        return data
+    # Replace the original get method with the new one
+    dataset.get = get_with_cast
+    return dataset
+
 class DataModule(LightningDataModule):
     """A LightningDataModule for loading datasets from the torchmdnet.datasets module.
 
@@ -82,7 +100,7 @@ class DataModule(LightningDataModule):
                     self.hparams["dataset_root"], **dataset_arg
                 )
 
-        self.dataset = FloatCastDatasetWrapper(
+        self.dataset = adapt_floats_for_dtype(
             self.dataset, dtype_mapping[self.hparams["precision"]]
         )
 
